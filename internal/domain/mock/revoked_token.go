// Code generated by MockGen. DO NOT EDIT.
// Source: travel-api/internal/domain (interfaces: RevokedTokenRepository)
//
// Generated by this command:
//
//	mockgen -destination mock/revoked_token.go travel-api/internal/domain RevokedTokenRepository
//

// Package mock_domain is a generated GoMock package.
package mock_domain

import (
	context "context"
	reflect "reflect"
	domain "travel-api/internal/domain"

	gomock "go.uber.org/mock/gomock"
)

// MockRevokedTokenRepository is a mock of RevokedTokenRepository interface.
type MockRevokedTokenRepository struct {
	ctrl     *gomock.Controller
	recorder *MockRevokedTokenRepositoryMockRecorder
	isgomock struct{}
}

// MockRevokedTokenRepositoryMockRecorder is the mock recorder for MockRevokedTokenRepository.
type MockRevokedTokenRepositoryMockRecorder struct {
	mock *MockRevokedTokenRepository
}

// NewMockRevokedTokenRepository creates a new mock instance.
func NewMockRevokedTokenRepository(ctrl *gomock.Controller) *MockRevokedTokenRepository {
	mock := &MockRevokedTokenRepository{ctrl: ctrl}
	mock.recorder = &MockRevokedTokenRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRevokedTokenRepository) EXPECT() *MockRevokedTokenRepositoryMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockRevokedTokenRepository) Create(ctx context.Context, token domain.RevokedToken) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", ctx, token)
	ret0, _ := ret[0].(error)
	return ret0
}

// Create indicates an expected call of Create.
func (mr *MockRevokedTokenRepositoryMockRecorder) Create(ctx, token any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockRevokedTokenRepository)(nil).Create), ctx, token)
}

// FindByJTI mocks base method.
func (m *MockRevokedTokenRepository) FindByJTI(ctx context.Context, jti string) (domain.RevokedToken, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FindByJTI", ctx, jti)
	ret0, _ := ret[0].(domain.RevokedToken)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FindByJTI indicates an expected call of FindByJTI.
func (mr *MockRevokedTokenRepositoryMockRecorder) FindByJTI(ctx, jti any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FindByJTI", reflect.TypeOf((*MockRevokedTokenRepository)(nil).FindByJTI), ctx, jti)
}
