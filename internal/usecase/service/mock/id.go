// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/hata0/travel-api/internal/usecase/service (interfaces: IDService)
//
// Generated by this command:
//
//	mockgen -destination mock/id.go github.com/hata0/travel-api/internal/usecase/service IDService
//

// Package mock_service is a generated GoMock package.
package mock_service

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockIDService is a mock of IDService interface.
type MockIDService struct {
	ctrl     *gomock.Controller
	recorder *MockIDServiceMockRecorder
	isgomock struct{}
}

// MockIDServiceMockRecorder is the mock recorder for MockIDService.
type MockIDServiceMockRecorder struct {
	mock *MockIDService
}

// NewMockIDService creates a new mock instance.
func NewMockIDService(ctrl *gomock.Controller) *MockIDService {
	mock := &MockIDService{ctrl: ctrl}
	mock.recorder = &MockIDServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIDService) EXPECT() *MockIDServiceMockRecorder {
	return m.recorder
}

// Generate mocks base method.
func (m *MockIDService) Generate() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Generate")
	ret0, _ := ret[0].(string)
	return ret0
}

// Generate indicates an expected call of Generate.
func (mr *MockIDServiceMockRecorder) Generate() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Generate", reflect.TypeOf((*MockIDService)(nil).Generate))
}
